{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Computer Programming I! This is a course designed to guide students in a project-based environment in the development of up-to-date concepts and skills that are used in the development of today's websites. Students will learn the fundamentals of how the internet works. They will learn and use the basic building blocks of the World Wide Web: HTML5 coding and CSS (Cascading Style Sheets). They will follow the steps to create a website by planning, designing, developing, deploying, and maintaining of website projects. They will learn and use To achieve this objective, we will use the Python programming language, one of the most vastly used coding languages out there. However, with the concepts learned in this course, the student will be able to learn any other languages on their own, if they so desire. Course Objectives Students will learn the fundamentals of how the internet works. Students will learn and use the basic blocks of the World Wide Web: HTML5 and CSS. Students will follow the steps to create a website by planning, designing, developing, deploying, and maintaining of website projects. Students will learn and use different scripting technologies to create more dynamic and interactive websites. Students will learn what it takes for a career in web development as they complete projects and create their own websites. This Is What This Course Is Not This is not an advanced course in Web Development. In fact, this is very introductory. This is not perfect, and it is probably going to be in development for a long time. Students will NOT become professional full stack developers in this course. Students will NOT learn how to fix computers in this course. Students will NOT become expert programmers or geniuses in this course. For Parents This website was designed to offer you some insight about what your child is learning in class. I also want to make sure you understand that you can reach out to me whenever you want if you have any questions or concerns. I want to make sure your child has the best education possible, but you have to be involved for this to be more easily achievable. If we work together, we can ensure your child will have better chances to succeed in life. For Students Find a mistake or suggest a good improvement and I'll give you a gift card! Your child will probably need to study at home to complete this course successfully. Please encourage them to do so.","title":"About"},{"location":"#welcome-to-computer-programming-i","text":"This is a course designed to guide students in a project-based environment in the development of up-to-date concepts and skills that are used in the development of today's websites. Students will learn the fundamentals of how the internet works. They will learn and use the basic building blocks of the World Wide Web: HTML5 coding and CSS (Cascading Style Sheets). They will follow the steps to create a website by planning, designing, developing, deploying, and maintaining of website projects. They will learn and use To achieve this objective, we will use the Python programming language, one of the most vastly used coding languages out there. However, with the concepts learned in this course, the student will be able to learn any other languages on their own, if they so desire.","title":"Welcome to Computer Programming I!"},{"location":"#course-objectives","text":"Students will learn the fundamentals of how the internet works. Students will learn and use the basic blocks of the World Wide Web: HTML5 and CSS. Students will follow the steps to create a website by planning, designing, developing, deploying, and maintaining of website projects. Students will learn and use different scripting technologies to create more dynamic and interactive websites. Students will learn what it takes for a career in web development as they complete projects and create their own websites.","title":"Course Objectives"},{"location":"#this-is-what-this-course-is-not","text":"This is not an advanced course in Web Development. In fact, this is very introductory. This is not perfect, and it is probably going to be in development for a long time. Students will NOT become professional full stack developers in this course. Students will NOT learn how to fix computers in this course. Students will NOT become expert programmers or geniuses in this course.","title":"This Is What This Course Is Not"},{"location":"#for-parents","text":"This website was designed to offer you some insight about what your child is learning in class. I also want to make sure you understand that you can reach out to me whenever you want if you have any questions or concerns. I want to make sure your child has the best education possible, but you have to be involved for this to be more easily achievable. If we work together, we can ensure your child will have better chances to succeed in life.","title":"For Parents"},{"location":"#for-students","text":"Find a mistake or suggest a good improvement and I'll give you a gift card! Your child will probably need to study at home to complete this course successfully. Please encourage them to do so.","title":"For Students"},{"location":"links/","text":"Useful Links I will add links here that I find useful and good. Websites W3Schools Tutorialspoint MDN Web Docs (AMAZING) GeeksForGeeks","title":"Useful Links"},{"location":"links/#useful-links","text":"I will add links here that I find useful and good.","title":"Useful Links"},{"location":"links/#websites","text":"W3Schools Tutorialspoint MDN Web Docs (AMAZING) GeeksForGeeks","title":"Websites"},{"location":"course/module_01/","text":"Git and Github What is Git? Git is a powerful tool used by software developers to manage and keep track of changes in their code. Think of it as a sophisticated \"undo\" button for your projects, allowing you to revert to previous versions of your code, track changes over time, and collaborate with others without losing your work. Here are some key features of Git: Version Control: Git keeps a history of all changes made to your code, so you can see what was changed, who changed it, and when. Branching and Merging: You can create branches to work on new features or bug fixes without affecting the main codebase. Once your work is complete, you can merge it back into the main branch. Collaboration: Multiple people can work on the same project simultaneously without overwriting each other's work. What is GitHub? GitHub is an online platform that hosts Git repositories, making it easier for you to manage your projects and collaborate with others. It's like a social network for programmers, where you can share your code, contribute to others' projects, and showcase your work. Here are some things you can do with GitHub: Repository Hosting: Store your projects in repositories, which are like folders for your code. Collaboration Tools: Use pull requests to review and discuss changes before merging them into your project. Project Management: Organize your work with issues, milestones, and project boards. Community Engagement: Follow other developers, contribute to open-source projects, and build your professional network. How Git and GitHub Work Together Initialize a Repository: Start by creating a new repository on your computer using Git. This will track changes to your project files. Make Changes: Write code, make changes, and commit them to your local repository. A commit is like a snapshot of your project at a particular point in time. Push to GitHub: Once you have a series of commits, you can push them to GitHub, making your changes available online. Collaborate: Others can clone your repository, make changes, and submit pull requests. You can review these changes and merge them into your project. Some Basic Git Commands Here are some essential Git commands you'll use frequently: git init : Initializes a new Git repository. git clone [url] : Copies an existing repository from GitHub to your local machine. git status : Shows the status of changes in your working directory. git add [file] : Stages a file, preparing it for a commit. git commit -m \"message\" : Commits the staged changes with a descriptive message. git push : Uploads your commits to GitHub. git pull : Fetches and integrates changes from GitHub to your local repository. Getting Started with GitHub Sign Up: Create a free account on GitHub. Create a Repository: Click the \"New\" button on your GitHub dashboard to create a new repository. Clone the Repository: Use git clone [url] to copy the repository to your computer. Start Coding: Make changes to your project files, commit them, and push them to GitHub. By using Git and GitHub, you'll learn valuable skills for managing your code and collaborating with others. As we progress through the course, you'll become more comfortable with these tools and see how they fit into the larger world of software development.","title":"Git and GitHub"},{"location":"course/module_01/#git-and-github","text":"","title":"Git and Github"},{"location":"course/module_01/#what-is-git","text":"Git is a powerful tool used by software developers to manage and keep track of changes in their code. Think of it as a sophisticated \"undo\" button for your projects, allowing you to revert to previous versions of your code, track changes over time, and collaborate with others without losing your work. Here are some key features of Git: Version Control: Git keeps a history of all changes made to your code, so you can see what was changed, who changed it, and when. Branching and Merging: You can create branches to work on new features or bug fixes without affecting the main codebase. Once your work is complete, you can merge it back into the main branch. Collaboration: Multiple people can work on the same project simultaneously without overwriting each other's work.","title":"What is Git?"},{"location":"course/module_01/#what-is-github","text":"GitHub is an online platform that hosts Git repositories, making it easier for you to manage your projects and collaborate with others. It's like a social network for programmers, where you can share your code, contribute to others' projects, and showcase your work. Here are some things you can do with GitHub: Repository Hosting: Store your projects in repositories, which are like folders for your code. Collaboration Tools: Use pull requests to review and discuss changes before merging them into your project. Project Management: Organize your work with issues, milestones, and project boards. Community Engagement: Follow other developers, contribute to open-source projects, and build your professional network.","title":"What is GitHub?"},{"location":"course/module_01/#how-git-and-github-work-together","text":"Initialize a Repository: Start by creating a new repository on your computer using Git. This will track changes to your project files. Make Changes: Write code, make changes, and commit them to your local repository. A commit is like a snapshot of your project at a particular point in time. Push to GitHub: Once you have a series of commits, you can push them to GitHub, making your changes available online. Collaborate: Others can clone your repository, make changes, and submit pull requests. You can review these changes and merge them into your project.","title":"How Git and GitHub Work Together"},{"location":"course/module_01/#some-basic-git-commands","text":"Here are some essential Git commands you'll use frequently: git init : Initializes a new Git repository. git clone [url] : Copies an existing repository from GitHub to your local machine. git status : Shows the status of changes in your working directory. git add [file] : Stages a file, preparing it for a commit. git commit -m \"message\" : Commits the staged changes with a descriptive message. git push : Uploads your commits to GitHub. git pull : Fetches and integrates changes from GitHub to your local repository.","title":"Some Basic Git Commands"},{"location":"course/module_01/#getting-started-with-github","text":"Sign Up: Create a free account on GitHub. Create a Repository: Click the \"New\" button on your GitHub dashboard to create a new repository. Clone the Repository: Use git clone [url] to copy the repository to your computer. Start Coding: Make changes to your project files, commit them, and push them to GitHub. By using Git and GitHub, you'll learn valuable skills for managing your code and collaborating with others. As we progress through the course, you'll become more comfortable with these tools and see how they fit into the larger world of software development.","title":"Getting Started with GitHub"}]}